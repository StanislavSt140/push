package com.example.push.market

import android.util.Log
import androidx.compose.foundation.Image
import androidx.compose.foundation.clickable
import androidx.compose.foundation.layout.*
import androidx.compose.foundation.rememberScrollState
import androidx.compose.foundation.shape.RoundedCornerShape
import androidx.compose.foundation.verticalScroll
import androidx.compose.material.Text
import androidx.compose.material3.*
import androidx.compose.runtime.*
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.draw.clip
import androidx.compose.ui.graphics.Color
import androidx.compose.ui.text.style.TextDecoration
import androidx.compose.ui.unit.dp
import androidx.navigation.NavController
import coil.compose.rememberAsyncImagePainter
import com.example.push.market.RetrofitClient
import com.example.push.ui.components.AppHeader
import kotlinx.coroutines.launch

@Composable
fun ProductDetailScreen(productId: Int, navController: NavController) {
    val product = remember { mutableStateOf<ProductItem?>(null) }
    val scope = rememberCoroutineScope()

    LaunchedEffect(productId) {
        scope.launch {
            try {
                val response = RetrofitClient.marketApi.getProductDetail(productId)
                if (response.status == "success") {
                    product.value = response.data ?: ProductItem(
                        id = productId,
                        title = "–ù–µ–≤—ñ–¥–æ–º–∏–π —Ç–æ–≤–∞—Ä",
                        description = "–û–ø–∏—Å –≤—ñ–¥—Å—É—Ç–Ω—ñ–π",
                        price = 0.0,
                        discountPrice = null,
                        imageUrl = "",
                        categoryId = null,
                        rating = 0,
                        user = response.data?.user ?: null // ‚úÖ –î–æ–¥–∞—î–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
                    )
                    Log.d("ProductDetailScreen", "–û—Ç—Ä–∏–º–∞–Ω–æ —Ç–æ–≤–∞—Ä: ${response.data}")
                }
            } catch (e: Exception) {
                Log.e("ProductDetailScreen", "–ü–æ–º–∏–ª–∫–∞: ${e.message}")
            }
        }
    }

    AppHeader(navController, "–î–µ—Ç–∞–ª—ñ —Ç–æ–≤–∞—Ä—É") {
        Column(modifier = Modifier.fillMaxSize().padding(16.dp)) {
            product.value?.let {item ->
                Column(
                    modifier = Modifier.fillMaxSize().padding(top = 86.dp) // ‚¨Ö –ö–æ—Ä–∏–≥—É—î–º–æ –≤—ñ–¥—Å—Ç—É–ø–∏
                ) {
                    Image(
                        painter = rememberAsyncImagePainter(item.imageUrl),
                        contentDescription = null,
                        modifier = Modifier.height(250.dp).fillMaxWidth().clip(RoundedCornerShape(12.dp)) // ‚¨Ö –ó–∞–∫—Ä—É–≥–ª—é—î–º–æ –∫—É—Ç–∏
                    )
                    Spacer(modifier = Modifier.height(16.dp))

                    // üî• –û—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è —Ü—ñ–Ω
                    Row(
                        verticalAlignment = Alignment.CenterVertically,
                        modifier = Modifier.fillMaxWidth(),
                        horizontalArrangement = Arrangement.SpaceBetween
                    ) {
                        Column {
                            if (item.discountPrice != null && item.discountPrice > 0) {
                                Text(
                                    "‚Ç¥${item.discountPrice}",
                                    style = MaterialTheme.typography.titleLarge,
                                    color = Color.Red
                                )
                                Text(
                                    "‚Ç¥${item.price}",
                                    style = MaterialTheme.typography.bodyMedium.copy(textDecoration = TextDecoration.LineThrough),
                                    color = Color.Gray
                                ) // ‚¨Ö –ü–µ—Ä–µ—á–µ—Ä–∫–Ω—É—Ç–∞ —Å—Ç–∞—Ä–∞ —Ü—ñ–Ω–∞
                            } else {
                                Text("‚Ç¥${item.price}", style = MaterialTheme.typography.titleLarge)
                            }
                        }


                    }

                    Spacer(modifier = Modifier.height(16.dp))

                    // üìñ –û–ø–∏—Å —Ç–æ–≤–∞—Ä—É –∑ –ø—Ä–æ–∫—Ä—É—á—É–≤–∞–Ω–Ω—è–º
                    Box(modifier = Modifier.fillMaxWidth().weight(1f)) {
                        Text(
                            item.description,
                            style = MaterialTheme.typography.titleLarge,
                            modifier = Modifier.verticalScroll(rememberScrollState()) // ‚¨Ö –î–æ–¥–∞—î–º–æ –ø—Ä–æ–∫—Ä—É—á—É–≤–∞–Ω–Ω—è!
                        )
                    }
                    Text(
                        text = "–¢–æ–≤–∞—Ä —Å—Ç–≤–æ—Ä–∏–≤(–ª–∞): ${item.user?.name ?: "–ù–µ–≤—ñ–¥–æ–º–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á"} (${item.user?.className ?: "‚Äî"})",
                        style = MaterialTheme.typography.bodyMedium.copy(color = Color.Gray),
                        modifier = Modifier.padding(top = 8.dp)
                    )

                    Spacer(modifier = Modifier.height(16.dp))

                    // üîô –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"
                    Button(
                        onClick = { navController.popBackStack() },
                        modifier = Modifier.fillMaxWidth().padding(bottom = 36.dp),
                        colors = ButtonDefaults.buttonColors(
                            containerColor = Color(0xFF03736A),  // ‚¨Ö –ó–∞–º—ñ—Å—Ç—å backgroundColor –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ containerColor
                            contentColor = Color.White   // ‚¨Ö –ö–æ–ª—ñ—Ä —Ç–µ–∫—Å—Ç—É –∑–∞–ª–∏—à–∞—î–º–æ
                        )
                    ) {
                        Text("–ù–∞–∑–∞–¥", style = MaterialTheme.typography.bodyLarge, color = Color.White)
                    }
                }
            } ?: Text("–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...")
        }
    }
}

